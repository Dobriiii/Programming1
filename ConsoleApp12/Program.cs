namespace ConsoleApp12
{
  internal class Program
  {
    static void Main(string[] args)
    {
      Console.WriteLine("Hello, World!");
    }
  }
}





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































/*
 * 
 * 1.Създаваш нов проект-ASP.NET Core Web App(Model-View-Controller)
 * -на Аuthentication Type - Individual Accounts
 * -маркирай Do not use top-level statements
 * 2.В папката Data създай нов клас AppUser 
 * -класът трябва да наследява :IdentityUser
 * -в класът си добави дадените полета 
 * .класът трябва в този случай да има списък от списъци от задачи.
 * За тази цел добавяш:
 * public virtual List<ToDoList> Lists {get; set;}
 * 
 * .конструктора на AppUser добавяш:
 * public AppUser()-конструктора 
 * {
 * Lists = new List<ToDoList>();
 * 
 * 3.Създаваш клас ToDoList, който отговаря на полето.
 * -класа задължително трябва да има Id
 * -добавяш [Key] над полето Id
 * -добавяш нужните полета 
 * -добавяш public virtual AppUser?
 * -ако имаш списък от задачи:
 * public virtual List<ToDoItem> Items;
 * 
 * -после пак си добавяш конструктора:
 * public ToDoList()
 * {
 * Items = new List<ToDoItem>()
 * }
 * 
 * 4.Създаваш клас ToDoItem
 * -добавяш полетата на зачисления потребител:-трябва да има поле за Id
 * public string AsigneeId
 * public virtual AppUser? Asignee
 * -добавяш останалите полета
 * 
 * -ако имаш списък към, който е зачислена задачата:
 * public string ToDoListId
 * public virtual ToDoList? ToDoList
 * 
 * 5.Отиваш в Program.cs
 * -на 19 ред заменяш IdentityUser с AppUser 
 * 
 * 6.Отваряш Package Manager Console
 * -update-database
 * -add-migartion ToDoApp(примерно име)
 * 
 * 7.Отиваш на Controller папката и добавяш New Scaffolded Item - MVC Controller with views, using Entity
 * -на Model Class - първо ToDoList
 * ако има грешка update-database
 * -после пак на ToDoItem
 * 
 * 8.Отиваш в Shared/_LoginPartial
 * -заменяш на 3ти и 4ти ред IdentityUser с AppUser
 * 
 * 9.Във Program.cs на 22ри ред добавяш:
 * -builder.Services.AddRazorPages(); -ако не работи програмата махаш това.
 * -добавяш add-migration Name
 * 
 * 10.Отиваш на Migrations/ApplicationDbContext
 * -на 14 ред добавяш :
 * protected override void OnModelCreation(ModelBuilder builder)
 * {
 *  builder.Entity<ToDoList>()
 *  .HasMany(tdl => tdl.Items)
 *  .WithOne(tdi => tdi.ToDoList)
 *  .OnDelete(DeleteBehaivor.NoAction);
 * }
 * 
 * -remove-migration
 * -add-migration
 * -update-database
 * 
 * 11.Отиваш на Controllers/ToDoListsController
 * на всеки .SelectList вместо Id слагаш Email
 * както е на 50ти ред
 * 
 * 32min
 * 
 * 12.Отиваш на Controllers/ToDoItemsContoller и пак същото
 * на 51 ред заменяш с Email, а на 52 с Title
 * 
 * 13.Отиваш в ToDoLists/Details
 * и за да добавиш ToDoItems на страниците пишеш:
 * <h5> ToDo Items</h5>
 * <ul>
 * @foreach (var item in Model.Items)
 * {
 * <li><a asp-controller="ToDoItems"
 * asp-action="Details" asp-route-id="@item.Id">@item.Title</a></li>
 * 
 * 14.Отиваш на ToDoListsController и на 38 ред пишеш:
 * .Include(t => t.Items)
 * или 
 * отиваш в Program.cs на 18ти ред след connectionString добавяш:
 * .UseLazyProxies());
 * и теглиш в NuGet
 * EntityFrameworkCore.Proxies на текущата версия на .Net Framework
 * 
 * 15.Отиваш в ToDoListsController
 * и копираш от 13 ред ApplicationDbContext
 * и го поставяш в HomeController
 * на 11 ред
 * и от ToDoListsController на 16 ред пак копираш ApplicationDbContext context и го поставяш като втора позиция на 
 * конструктора на 12 ред.
 * 
 * после в конструктора добавяш _context = context
 * 
 * 16.на 20 ред в HomeController добавяш броячите Index
 * (добавяш също using System.Linq)
 * int userCount = _userManager.UsersCount()
 * int ToDoListsCount = _context.ToDoList.Count();
 * int ToDoItemsCount = _context.ToDoItem.Count();
 * 
 * return View();
 * 
 * 
 * 17.На 13 ред в HomeController добавяш:
 * private readonly UserManager<AppUser> _userManager; 
 * и на 3та позиция на конструктора добавяш: 
 * UserManager<AppUser> userManager
 * 
 * също в Index добавяш:
 * ViewData["UsersCount"] = usersCount;
 * ViewData["ToDoListsCount"] = ToDoListsCount;
 * ViewData["ToDoItemsCount"] = ToDoItemsCount;
 * return View();
 * 
 * 18.В Index.cshtml
 * под 1вия div добавяш
 * <h1>Stats</h1>
 * Users:<br/>
 * ToDoLists:<br/>
 * ToDoItems:<br/>
 * 
 * 
 * 
 * 
 * под <h1>Stats</h1> слагаш
 * 
 * <div class="container">
    <div class="row">
	<div class="three col-md-4">
		<div class="counter-box colored">
			<i class="fa fa-thumbs-o-up"></i>
			<span class="counter">@ViewData["UsersCount"]</span>
			<p>Users</p>
		</div>
	</div>
	<div class="three col-md-4">
		<div class="counter-box">
			<i class="fa fa-group"></i>
			<span class="counter">@ViewData["ToDoListsCount"]</span>
			<p>Registered Members</p>
		</div>
	</div>
	<div class="three col-md-4">
		<div class="counter-box">
			<i class="fa  fa-shopping-cart"></i>
			<span class="counter">@ViewData["ToDoItemsCount"]</span>
			<p>Available Products</p>
		</div>
	</div>
	</div>

19.Отиваш най-долу в wwwroot/css/site.cs и слагаш:
.container{
    margin-top:100px;
}

.counter-box {
	display: block;
	background: #f6f6f6;
	padding: 40px 20px 37px;
	text-align: center
}

.counter-box p {
	margin: 5px 0 0;
	padding: 0;
	color: #909090;
	font-size: 18px;
	font-weight: 500
}

.counter-box i {
	font-size: 60px;
	margin: 0 0 15px;
	color: #d2d2d2
}

.counter { 
	display: block;
	font-size: 32px;
	font-weight: 700;
	color: #666;
	line-height: 28px
}

.counter-box:hover {
      background: #0d6efd;
      -webkit-transition: all 1s ease-in-out;
      -moz-transition: all 1s ease-in-out;
      -o-transition: all 1s ease-in-out;
      transition: all 1s ease-in-out;
}

.counter-box:hover p,
.counter-box:hover i,
.counter-box:hover .counter {
	color: #fff
}



Линк:https://disk.yandex.ru/i/KaRLIhX8oGSwnw
Линк за 3:https://disk.yandex.ru/i/Td_HgoCPkZvQOA
*/

